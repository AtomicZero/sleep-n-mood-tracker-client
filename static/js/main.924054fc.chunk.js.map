{"version":3,"sources":["images/4k-night-forest-material-design-art.jpg","context/UserContext.js","components/ProtectedRoutes.js","components/NavBar.js","api/constants.js","pages/Register.js","pages/Login.js","components/PlanSetUp.js","components/Plans.js","pages/MyPlans.js","components/LogChart.js","pages/Dashboard.js","components/LogSetUp.js","pages/MyPlan.js","Router.js","App.js","index.js"],"names":["module","exports","UserContext","createContext","ProtectedRoutes","setUser","useContext","mode","style","padding","Item","key","to","onClick","localStorage","removeItem","NavBar","user","token","BASE_URL","LOGIN_URL","REGISTER_URL","Register","history","useHistory","tailLayout","wrapperCol","offset","span","onFinish","values","a","axios","post","data","success","Modal","content","message","onOk","push","error","title","type","justify","align","minHeight","backgroundImage","Background","backgroundPosition","backgroundSize","backgroundRepeat","isMobile","border","backgroundColor","labelCol","name","initialValues","remember","margin","label","rules","required","Password","htmlType","Login","setItem","JSON","stringify","PlanSetUp","onCancel","desiredHours","weekCommencing","payload","toDate","headers","Authorization","planId","_id","width","marginRight","renderPlanCard","plan","status","CheckOutlined","color","ExclamationCircleOutlined","extra","textAlign","format","Date","Plans","plans","length","display","flexWrap","map","MyPlans","useState","setPlans","loading","setLoading","showModal","setShowModal","useEffect","get","results","fetchData","background","borderRadius","marginBottom","marginTop","size","PlusOutlined","visible","footer","e","LogChart","logs","console","log","date","totalSleepHours","reduce","acc","actualSleepHours","height","dataKey","stroke","activeDot","r","Dashboard","setLogs","background-color","LogSetUp","setPlan","useParams","disabledDate","d","isAfter","addDays","isBefore","MyPlan","editMode","setEditMode","handleClickEdit","handleClickAdd","handleLogUpdate","logId","mood","put","each","handleLogDelete","event","currentTarget","id","delete","filter","renderLogCard","day","CloseCircleOutlined","moment","min","max","placeholder","hidden","value","toUpperCase","ghost","onBack","goBack","subTitle","renderLogs","Router","path","exact","Header","Layout","Content","App","localUser","getItem","parsedLocalUser","parse","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.924054fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/4k-night-forest-material-design-art.3f5353e5.jpg\";","import { createContext } from \"react\";\n\nconst UserContext = createContext();\n\nexport default UserContext;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Menu } from \"antd\";\n\nimport UserContext from \"../context/UserContext\";\n\nconst ProtectedRoutes = () => {\n  const { setUser } = useContext(UserContext);\n\n  return (\n    <Menu mode=\"horizontal\" style={{ padding: \"0px 50px\" }}>\n      <Menu.Item key=\"dashboard\">\n        <Link to=\"/dashboard\">Dashboard</Link>\n      </Menu.Item>\n      <Menu.Item key=\"plans\">\n        <Link to=\"/plans\">My Plans</Link>\n      </Menu.Item>\n      <Menu.Item\n        key=\"logout\"\n        onClick={() => {\n          localStorage.removeItem(\"user\");\n          setUser({});\n        }}\n      >\n        Logout\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nexport default ProtectedRoutes;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Menu } from \"antd\";\n\nimport UserContext from \"../context/UserContext\";\nimport ProtectedRoutes from \"./ProtectedRoutes\";\n\nconst NavBar = () => {\n  const { user } = useContext(UserContext);\n\n  if (user.token) {\n    return <ProtectedRoutes />;\n  }\n  return (\n    <Menu mode=\"horizontal\" style={{ padding: \"0px 50px\" }}>\n      <Menu.Item key=\"login\">\n        <Link to=\"/login\">Login</Link>\n      </Menu.Item>\n      <Menu.Item key=\"register\">\n        <Link to=\"/register\">Register</Link>\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nexport default NavBar;\n","export const BASE_URL = \n  process.env.NODE_ENV === \"development\"\n    ? \"http://localhost:8000\"\n    : \"https://limitless-waters-62037.herokuapp.com\";\n\nexport const LOGIN_URL = `${BASE_URL}/auth/login`;\nexport const REGISTER_URL = `${BASE_URL}/auth/register`;","import React from \"react\";\nimport axios from \"axios\";\nimport { isMobile } from \"react-device-detect\";\nimport { Form, Input, Button, Row, Col, Modal } from \"antd\";\n\nimport { REGISTER_URL } from \"../api/constants\";\nimport Background from \"../images/4k-night-forest-material-design-art.jpg\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const Register = () => {\n  const history = useHistory();\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  const tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n  };\n\n  const onFinish = async (values) => {\n    try {\n      const { data } = await axios.post(REGISTER_URL, values);\n\n      if (data.success) {\n        Modal.success({\n          content: data.message,\n          onOk() {\n            history.push(\"/login\");\n          },\n        });\n      } else {\n        Modal.error({\n          title: \"Error\",\n          content: \"Failed to create an account. Please try again later.\",\n        });\n      }\n    } catch (error) {\n      Modal.error({\n        title: \"Error\",\n        content: error.message,\n      });\n    }\n  };\n\n  return (\n    <Row\n      type=\"flex\"\n      justify=\"center\"\n      align=\"middle\"\n      style={{\n        minHeight: \"700px\",\n        backgroundImage: `url(${Background})`,\n        backgroundPosition: \"center\",\n        backgroundSize: \"fit\",\n        backgroundRepeat: \"no-repeat\",\n      }}\n    >\n      <Col\n        span={isMobile ? 24 : 12}\n        style={{ border: \"solid 1px #8a838a\", backgroundColor: \"white\" }}\n      >\n        <Form\n          {...layout}\n          name=\"basic\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n          style={{ margin: \"50px\" }}\n        >\n          <Form.Item\n            label=\"First Name\"\n            name=\"firstName\"\n            rules={[\n              { required: true, message: \"Please input your first name\" },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"Last Name\"\n            name=\"lastName\"\n            rules={[{ required: true, message: \"Please input your last name\" }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"Email\"\n            name=\"email\"\n            rules={[{ required: true, message: \"Please input your email\" }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[{ required: true, message: \"Please input your password\" }]}\n          >\n            <Input.Password />\n          </Form.Item>\n          <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Col>\n    </Row>\n  );\n};\n","import React, { useContext } from \"react\";\nimport axios from \"axios\";\nimport { isMobile } from \"react-device-detect\";\nimport { Form, Input, Button, Row, Col, Modal } from \"antd\";\n\nimport { LOGIN_URL } from \"../api/constants\";\nimport UserContext from \"../context/UserContext\";\nimport Background from \"../images/4k-night-forest-material-design-art.jpg\";\n\nexport const Login = () => {\n  const { setUser } = useContext(UserContext);\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  const tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n  };\n\n  const onFinish = async (values) => {\n    try {\n      const { data } = await axios.post(LOGIN_URL, values);\n      localStorage.setItem(\"user\", JSON.stringify(data));\n      setUser(data);\n    } catch (error) {\n      Modal.error({\n        title: \"Error\",\n        content: error.message,\n      });\n    }\n  };\n\n  return (\n    <Row\n      type=\"flex\"\n      justify=\"center\"\n      align=\"middle\"\n      style={{\n        minHeight: \"700px\",\n        backgroundImage: `url(${Background})`,\n        backgroundPosition: \"center\",\n        backgroundSize: \"auto\",\n        backgroundRepeat: \"no-repeat\",\n      }}\n    >\n      <Col\n        span={isMobile ? 24 : 12}\n        style={{ border: \"solid 1px #8a838a\", backgroundColor: \"white\" }}\n      >\n        <Form\n          {...layout}\n          name=\"basic\"\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n          style={{ margin: \"50px\" }}\n        >\n          <Form.Item\n            label=\"Email\"\n            name=\"email\"\n            rules={[{ required: true, message: \"Please input your email\" }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[{ required: true, message: \"Please input your password\" }]}\n          >\n            <Input.Password />\n          </Form.Item>\n          <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Col>\n    </Row>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Form, Input, Button, DatePicker, InputNumber, Modal } from \"antd\";\nimport axios from \"axios\";\nimport UserContext from \"../context/UserContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { BASE_URL } from \"../api/constants\";\n\nconst PlanSetUp = ({ onCancel }) => {\n  const { user } = useContext(UserContext);\n  const history = useHistory();\n\n  const layout = {\n    labelCol: { span: 10 },\n    wrapperCol: { span: 14 },\n  };\n\n  const onFinish = async ({ title, desiredHours, weekCommencing }) => {\n    try {\n      const payload = {\n        title,\n        desiredHours,\n        weekCommencing: weekCommencing.toDate(),\n      };\n\n      const {\n        data: { _id: planId },\n      } = await axios.post(`${BASE_URL}/api/plans`, payload, {\n        headers: { Authorization: `Bearer ${user.token}` },\n      });\n      Modal.success({\n        content: \"Yeah\",\n        onOk() {\n          history.push(`/plans/${planId}`);\n        },\n      });\n    } catch (err) {\n      Modal.error({\n        title: \"Failed to create a sleep plan\",\n        content: err.message,\n      });\n    }\n  };\n\n  return (\n    <div justify=\"center\" align=\"middle\">\n      <Form\n        {...layout}\n        name=\"basic\"\n        initialValues={{ remember: true }}\n        style={{ margin: \"50px\" }}\n        onFinish={onFinish}\n      >\n        <Form.Item\n          label=\"Title\"\n          name=\"title\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input a plan title for your sleep plan\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"Sleep Hours\"\n          name=\"desiredHours\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your sleep goal hours for your sleep plan\",\n            },\n          ]}\n        >\n          <InputNumber style={{ width: \"100%\" }} />\n        </Form.Item>\n        <Form.Item\n          label=\"Week Commencing\"\n          name=\"weekCommencing\"\n          rules={[\n            {\n              required: true,\n              message:\n                \"Please input the week commencing date for your sleep plan\",\n            },\n          ]}\n        >\n          <DatePicker style={{ width: \"100%\" }} />\n        </Form.Item>\n\n        <Form.Item justify=\"center\" align=\"middle\">\n          <Button\n            type=\"default\"\n            htmlType=\"button\"\n            onClick={onCancel}\n            style={{ marginRight: \"8px\" }}\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            style={{ marginRight: \"8px\" }}\n          >\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default PlanSetUp;\n","import React from \"react\";\nimport { Card, Row } from \"antd\";\nimport { CheckOutlined, ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { format } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\n\nconst renderPlanCard = (plan) => {\n  return (\n    <Card\n      key={plan._id}\n      title={\n        <span>\n          {plan.status === \"COMPLETE\" ? (\n            <CheckOutlined style={{ color: \"green\", marginRight: \"8px\" }} />\n          ) : (\n            <ExclamationCircleOutlined\n              style={{ color: \"orange\", marginRight: \"8px\" }}\n            />\n          )}{\" \"}\n          {plan.title}\n        </span>\n      }\n      extra={<Link to={`/plans/${plan._id}`}>View</Link>}\n      style={{ width: 300, margin: \"20px\" }}\n    >\n      <h3 style={{ textAlign: \"center\" }}>{plan.desiredHours} hrs</h3>\n      <p style={{ textAlign: \"center\" }}>\n        Week starting:{\" \"}\n        {format(new Date(plan.weekCommencing), \"EEE do MMM yyyy\")}\n      </p>\n    </Card>\n  );\n};\n\nconst Plans = ({ plans = [] }) => {\n  if (plans.length) {\n    return (\n      <Row\n        style={{ display: \"flex\", flexWrap: \"wrap\" }}\n        justify=\"center\"\n        align=\"middle\"\n      >\n        {plans.map(renderPlanCard)}\n      </Row>\n    );\n  }\n\n  return (\n    <Row\n      style={{ display: \"flex\", flexWrap: \"wrap\" }}\n      justify=\"center\"\n      align=\"middle\"\n    >\n      <h3>No plans</h3>\n    </Row>\n  );\n};\n\nexport default Plans;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Spin, Modal, Button, Row } from \"antd\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nimport PlanSetUp from \"../components/PlanSetUp\";\nimport UserContext from \"../context/UserContext\";\nimport { BASE_URL } from \"../api/constants\";\nimport Plans from \"../components/Plans\";\n\nconst MyPlans = () => {\n  const history = useHistory();\n  const { user } = useContext(UserContext);\n  const [plans, setPlans] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await axios.get(`${BASE_URL}/api/plans`, {\n          headers: { Authorization: `Bearer ${user.token}` },\n        });\n        setPlans(data.results);\n        setLoading(false);\n      } catch (err) {\n        setLoading(false);\n        Modal.error({\n          title: \"Error\",\n          content: err.message,\n          onOk() {\n            history.push(\"/dashboard\");\n          },\n        });\n      }\n    };\n\n    fetchData();\n  }, [history, user.token]);\n\n  const handleShowModal = () => {\n    setShowModal(true);\n  };\n\n  const handleHideModal = (e) => {\n    setShowModal(false);\n  };\n\n  if (loading) {\n    return (\n      <div\n        style={{\n          textAlign: \"center\",\n          background: \"rgba(0, 0, 0, 0.05)\",\n          borderRadius: \"4px\",\n          marginBottom: \"20px\",\n          padding: \"30px 50px\",\n          margin: \"20px 0\",\n        }}\n      >\n        <Spin />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Row\n        style={{ display: \"flex\", flexWrap: \"wrap\", marginTop: \"20px\" }}\n        justify=\"center\"\n        align=\"middle\"\n        >\n        <Button\n          type=\"primary\"\n          onClick={handleShowModal}\n          size=\"large\"\n          style={{ width: \"50%\" }}\n        >\n          <span>\n            <PlusOutlined /> Plan\n          </span>\n        </Button>\n      </Row>\n      <Modal title=\"Add New Plan\" visible={showModal} footer={null}>\n        <PlanSetUp onCancel={handleHideModal} />\n      </Modal>\n      <Plans plans={plans} />\n    </div>\n  );\n};\n\nexport default MyPlans;\n","import React from \"react\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend } from \"recharts\";\nimport { format } from \"date-fns\";\n\nconst LogChart = ({ logs }) => {\n  console.log(logs);\n\n  const data = logs.map((log) => {\n    const date = format(new Date(log.date), \"dd-MM-yy\");\n    return {\n      ...log,\n      date,\n    };\n  });\n\n  const totalSleepHours = logs.reduce((acc, log) => {\n    acc += log.actualSleepHours;\n    return acc;\n  }, 0);\n\n  console.log(\"TOTAL SLEEP HOURS\", totalSleepHours);\n\n  let color = \"red\";\n\n  if (totalSleepHours < 30) {\n    color = \"green\";\n  } else {\n    color = \"blue\";\n  }\n\n  return (\n    <LineChart width={600} height={400} data={data}>\n      <XAxis dataKey=\"date\" />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <Line\n        type=\"monotone\"\n        dataKey=\"actualSleepHours\"\n        stroke={color}\n        activeDot={{ r: 6 }}\n      />\n    </LineChart>\n  );\n};\n\nexport default LogChart;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Spin, Modal, Row } from \"antd\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nimport UserContext from \"../context/UserContext\";\nimport { BASE_URL } from \"../api/constants\";\nimport LogChart from \"../components/LogChart\";\n\nconst Dashboard = () => {\n  const history = useHistory();\n  const { user } = useContext(UserContext);\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await axios.get(`${BASE_URL}/api/logs`, {\n          headers: { Authorization: `Bearer ${user.token}` },\n        });\n        setLogs(data.results);\n        setLoading(false);\n      } catch (err) {\n        setLoading(false);\n        Modal.error({\n          title: \"Error\",\n          content: err.message,\n          onOk() {\n            history.push(\"/dashboard\");\n          },\n        });\n      }\n    };\n\n    fetchData();\n  }, [history, user.token]);\n\n  if (loading) {\n    return (\n      <div\n        style={{\n          textAlign: \"center\",\n          background: \"rgba(0, 0, 0, 0.05)\",\n          borderRadius: \"4px\",\n          marginBottom: \"20px\",\n          padding: \"30px 50px\",\n          margin: \"20px 0\",\n        }}\n      >\n        <Spin />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Row\n        style={{ display: \"flex\", flexWrap: \"wrap\", marginTop: \"20px\" }}\n        justify=\"center\"\n        align=\"middle\"\n        background-color=\"#d3adf7\"\n      >\n        <LogChart logs={logs} />\n      </Row>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React, { useContext } from \"react\";\nimport { Form, Input, Button, DatePicker, InputNumber, Modal } from \"antd\";\nimport axios from \"axios\";\nimport { addDays } from 'date-fns';\nimport UserContext from \"../context/UserContext\";\nimport { useParams } from \"react-router-dom\";\nimport { BASE_URL } from \"../api/constants\";\n\nconst LogSetUp = ({ onCancel, setPlan, weekCommencing }) => {\n  const { planId } = useParams();\n  const { user } = useContext(UserContext);\n\n  const layout = {\n    labelCol: { span: 10 },\n    wrapperCol: { span: 14 },\n  };\n\n  const onFinish = async (values) => {\n    try {\n      const { data: plan } = await axios.post(\n        `${BASE_URL}/api/plans/${planId}/logs`,\n        values,\n        {\n          headers: { Authorization: `Bearer ${user.token}` },\n        }\n      );\n      Modal.success({\n        content: \"Thank you for adding your log.\",\n        onOk() {\n          setPlan(plan);\n          onCancel();\n        },\n      });\n    } catch (err) {\n      Modal.error({\n        title: \"Failed to create a sleep plan\",\n        content: err.message,\n      });\n    }\n  };\n\n  return (\n    <div justify=\"center\" align=\"middle\">\n      <Form\n        {...layout}\n        name=\"addLogForm\"\n        initialValues={{ remember: true }}\n        style={{ margin: \"50px\" }}\n        onFinish={onFinish}\n      >\n        <Form.Item\n          label=\"Sleep Hours\"\n          name=\"actualSleepHours\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your sleep hours for your log\",\n            },\n          ]}\n        >\n          <InputNumber style={{ width: \"100%\" }} />\n        </Form.Item>\n        <Form.Item\n          label=\"Date\"\n          name=\"date\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input the date for your log\",\n            },\n          ]}\n        >\n          <DatePicker style={{ width: \"100%\" }} disabledDate={d => d.isAfter(addDays(new Date(weekCommencing), 7)) || d.isBefore(new Date(weekCommencing)) } />\n        </Form.Item>\n        <Form.Item\n          label=\"Mood\"\n          name=\"mood\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input a mood for your log\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item justify=\"center\" align=\"middle\">\n          <Button\n            type=\"default\"\n            htmlType=\"button\"\n            onClick={onCancel}\n            style={{ marginRight: \"8px\" }}\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            style={{ marginRight: \"8px\" }}\n          >\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default LogSetUp;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport {\n  Spin,\n  Modal,\n  PageHeader,\n  Button,\n  Descriptions,\n  Card,\n  Row,\n  InputNumber,\n  Input,\n  DatePicker,\n  Form,\n} from \"antd\";\nimport { CloseCircleOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport { format, subDays } from \"date-fns\";\nimport moment from \"moment\";\n\nimport { BASE_URL } from \"../api/constants\";\nimport UserContext from \"../context/UserContext\";\nimport LogSetUp from \"../components/LogSetUp\";\n\nconst MyPlan = () => {\n  const { planId } = useParams();\n  const history = useHistory();\n  const { user } = useContext(UserContext);\n  const [plan, setPlan] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [editMode, setEditMode] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data } = await axios.get(`${BASE_URL}/api/plans/${planId}`, {\n          headers: { Authorization: `Bearer ${user.token}` },\n        });\n        setPlan(data.results);\n        setLoading(false);\n      } catch (err) {\n        setLoading(false);\n        Modal.error({\n          title: \"Error\",\n          content: err.message,\n          onOk() {\n            history.push(\"/plans\");\n          },\n        });\n      }\n    };\n\n    fetchData();\n  }, [history, user.token, planId]);\n\n  if (loading) {\n    return (\n      <div\n        style={{\n          textAlign: \"center\",\n          background: \"rgba(0, 0, 0, 0.05)\",\n          borderRadius: \"4px\",\n          marginBottom: \"20px\",\n          padding: \"30px 50px\",\n          margin: \"20px 0\",\n        }}\n      >\n        <Spin />\n      </div>\n    );\n  }\n\n  const handleClickEdit = () => {\n    setEditMode(!editMode);\n  };\n\n  const handleClickAdd = () => {\n    setShowModal(true);\n  };\n\n  const handleHideModal = (e) => {\n    setShowModal(false);\n  };\n\n  const handleLogUpdate = async ({\n    logId,\n    date,\n    mood,\n    actualSleepHours,\n  }) => {\n    try {\n      const { data: log } = await axios.put(\n        `${BASE_URL}/api/logs/${logId}`,\n        { date, mood, actualSleepHours },\n        {\n          headers: { Authorization: `Bearer ${user.token}` },\n        }\n      );\n\n      Modal.success({\n        content: \"Your log has been successfully updated\",\n        onOk() {\n          const logs = plan.logs.map(each => {\n            if (each._id !== logId) {\n              return each\n            } else {\n              return log\n            }\n          })\n\n          setPlan({\n            ...plan,\n            logs,\n          })\n\n          setEditMode(false);\n        },\n      });\n    } catch (err) {\n      Modal.error({\n        title: \"Failed to update log\",\n        content: err.message,\n      });\n    }\n  };\n\n  const handleLogDelete = async (event) => {\n    const logId = event.currentTarget.id;\n    try {\n      await axios.delete(\n        `${BASE_URL}/api/plans/${planId}/logs/${logId}`,\n        {\n          headers: { Authorization: `Bearer ${user.token}` },\n        }\n      );\n\n      Modal.success({\n        content: \"Your log has been successfully deleted\",\n        onOk() {\n          const logs = plan.logs.filter(each => each._id !== logId)\n\n          setPlan({\n            ...plan,\n            logs,\n          })\n\n          setEditMode(false);\n        },\n      });\n    } catch (err) {\n      Modal.error({\n        title: \"Failed to delete log\",\n        content: err.message,\n      });\n    }\n  };\n\n  const renderPlanDetails = () => {\n    return (\n      <div\n        style={{\n          padding: \"24px\",\n        }}\n      >\n        <PageHeader\n          ghost={false}\n          onBack={() => history.goBack()}\n          title={plan.title}\n          subTitle={plan.status}\n          extra={[\n            plan.logs.length ? (<Button key=\"edit\" type=\"primary\" onClick={handleClickEdit}>\n              {editMode  ? \"Edit Mode\" : \"Edit\"}\n            </Button>) : null,\n            editMode ? null : (\n              <Button key=\"add\" type=\"primary\" onClick={handleClickAdd}>\n                Add Log\n              </Button>\n            ),\n          ]}\n        >\n          <Descriptions size=\"small\">\n            <Descriptions.Item label=\"Desired Hours\">\n              {plan.desiredHours} hrs\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Week Commencing\">\n              {format(new Date(plan.weekCommencing), \"EEE do MMM yyyy\")}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Creation At\">\n              {format(new Date(plan.weekCommencing), \"dd-MM-yyyy\")}\n            </Descriptions.Item>\n          </Descriptions>\n        </PageHeader>\n      </div>\n    );\n  };\n\n  const renderLogCard = (log) => {\n    if (editMode) {\n      return (\n        <Card\n          title={log.day}\n          extra={\n            <CloseCircleOutlined\n              style={{ color: \"red\" }}\n              onClick={handleLogDelete}\n              id={log._id}\n            />\n          }\n          style={{ width: 300, margin: \"20px\" }}\n          key={log._id}\n        >\n          <Form\n            name=\"editLog\"\n            initialValues={{\n              logId: log._id,\n              actualSleepHours: log.actualSleepHours,\n              mood: log.mood,\n              date: moment(log.date),\n            }}\n            onFinish={handleLogUpdate}\n          >\n            <Form.Item\n              name=\"actualSleepHours\"\n              rules={[\n                {\n                  required: true,\n                  message:\n                    \"Please input your sleep goal hours for your sleep plan\",\n                },\n              ]}\n              style={{ textAlign: \"center\", marginBottom: \"8px\" }}\n            >\n              <InputNumber size=\"large\" min={0} max={24} />\n            </Form.Item>\n            <Form.Item\n              name=\"mood\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your mood\",\n                },\n              ]}\n              style={{ textAlign: \"center\", marginBottom: \"8px\" }}\n            >\n              <Input size=\"large\" placeholder=\"Your mood...\" />\n            </Form.Item>\n            <Form.Item\n              name=\"date\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input log date\",\n                },\n              ]}\n              style={{ textAlign: \"center\", marginBottom: \"8px\" }}\n            >\n              <DatePicker format=\"DD/MM/YYYY\" />\n            </Form.Item>\n            <Form.Item\n              name=\"logId\"\n              hidden\n            >\n              <Input value={log._id} />\n            </Form.Item>\n            <Form.Item\n              justify=\"center\"\n              align=\"middle\"\n              style={{ textAlign: \"center\", marginBottom: \"8px\" }}\n            >\n              <Button type=\"primary\" htmlType=\"submit\">\n                Update\n              </Button>\n            </Form.Item>\n          </Form>\n        </Card>\n      );\n    }\n    return (\n      <Card\n        title={log.day}\n        style={{ width: 300, margin: \"20px\" }}\n        key={log._id}\n      >\n        <h1 style={{ textAlign: \"center\" }}>{log.actualSleepHours}</h1>\n        <h3 style={{ textAlign: \"center\" }}>{log.mood.toUpperCase()}</h3>\n        <p style={{ textAlign: \"center\" }}>\n          {format(new Date(log.date), \"EEE do MMM yyyy\")}\n        </p>\n      </Card>\n    );\n  };\n\n  const renderLogs = () => {\n    const { logs } = plan;\n\n    if (logs.length) {\n      return (\n        <Row\n          style={{ display: \"flex\", flexWrap: \"wrap\" }}\n          justify=\"center\"\n          align=\"middle\"\n        >\n          {logs.map(renderLogCard)}\n        </Row>\n      );\n    }\n\n    return (\n      <Row\n        style={{ display: \"flex\", flexWrap: \"wrap\" }}\n        justify=\"center\"\n        align=\"middle\"\n      >\n        <h3>No logs</h3>\n      </Row>\n    );\n  };\n\n  return (\n    <div>\n      {renderPlanDetails()}\n      {renderLogs()}\n      <Modal title=\"Add New Log\" visible={showModal} footer={null}>\n        <LogSetUp onCancel={handleHideModal} setPlan={setPlan} weekCommencing={plan.weekCommencing} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default MyPlan;\n","import React, { useContext } from \"react\";\nimport { Redirect, Switch, Route } from \"react-router-dom\";\n\nimport UserContext from \"./context/UserContext\";\n\nimport { Register } from \"./pages/Register\";\nimport { Login } from \"./pages/Login\";\nimport MyPlans from \"./pages/MyPlans\";\nimport Dashboard from \"./pages/Dashboard\";\nimport MyPlan from \"./pages/MyPlan\";\n\nexport const Router = () => {\n  const { user } = useContext(UserContext);\n\n  return (\n    <Switch>\n      <Route path=\"/\" exact>\n        {user.token ? <Redirect to=\"/dashboard\" /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route exact path=\"/login\">\n        {user.token ? <Redirect to=\"/dashboard\" /> : <Login />}\n      </Route>\n      <Route exact path=\"/register\">\n        {user.token ? <Redirect to=\"/dashboard\" /> : <Register />}\n      </Route>\n      <Route exact path=\"/dashboard\">\n        {user.token ? <Dashboard /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route exact path=\"/plans\">\n        {user.token ? <MyPlans /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route exact path=\"/plans/:planId\">\n        {user.token ? <MyPlan /> : <Redirect to=\"/login\" />}\n      </Route>\n    </Switch>\n  );\n};\n","import React, { useState } from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Layout } from \"antd\";\n\nimport UserContext from \"./context/UserContext\";\nimport NavBar from \"./components/NavBar\";\nimport { Router } from \"./Router\";\n\nconst { Header, Content } = Layout;\n\nexport const App = () => {\n  const localUser = localStorage.getItem(\"user\");\n  const parsedLocalUser = JSON.parse(localUser);\n  const [user, setUser] = useState(parsedLocalUser || {});\n\n  return (\n    <HashRouter>\n      <Layout>\n        <UserContext.Provider value={{ user, setUser }}>\n          <Header style={{ padding: \"0px\" }}>\n            <NavBar />\n          </Header>\n          <Content>\n            <Router />\n          </Content>\n        </UserContext.Provider>\n      </Layout>\n    </HashRouter>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}